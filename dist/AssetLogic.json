{"abi":[{"constant":false,"inputs":[{"name":"_assetId","type":"uint256"},{"name":"_newSmartMeter","type":"address"}],"name":"updateSmartMeter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_newLogic","type":"address"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"userContractLookup","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"db","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getAssetListLength","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"},{"name":"_caller","type":"address"}],"name":"isRole","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_assetId","type":"uint256"},{"name":"_active","type":"bool"}],"name":"setActive","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_dbAddress","type":"address"},{"name":"_admin","type":"address"}],"name":"init","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_sender","type":"address"},{"indexed":true,"name":"_assetId","type":"uint256"}],"name":"LogAssetCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_assetId","type":"uint256"}],"name":"LogAssetFullyInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_assetId","type":"uint256"}],"name":"LogAssetSetActive","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_assetId","type":"uint256"}],"name":"LogAssetSetInactive","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_newOwner","type":"address"}],"name":"LogChangeOwner","type":"event"}],"bytecode":"","contractName":"AssetLogic","deployedBytecode":"","source":"// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector, \n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH, Martin Kuechler, martin.kuchler@slock.it\n\npragma solidity ^0.4.24;\n\nimport \"ew-user-registry-contracts/Users/RoleManagement.sol\";\nimport \"ew-utils-general-contracts/Interfaces/Updatable.sol\";\nimport \"../../contracts/Interfaces/AssetDbInterface.sol\";\nimport \"../../contracts/Interfaces/AssetGeneralInterface.sol\";\n\n\n/// @title Contract for storing the current logic-contracts-addresses for the certificate of origin\ncontract AssetLogic is RoleManagement, Updatable, AssetGeneralInterface {\n\n    event LogAssetCreated(address _sender, uint indexed _assetId);\n    event LogAssetFullyInitialized(uint indexed _assetId);\n    event LogAssetSetActive(uint indexed _assetId);\n    event LogAssetSetInactive(uint indexed _assetId);\n\n    AssetDbInterface public db;\n\n    modifier isInitialized {\n        require(address(db) != 0x0);\n        _;\n    }\n\n    /**\n        external functions\n    */\n    /// @notice function toinizialize the database, can only be called once\n    /// @param _dbAddress address of the database contract\n    function init(address _dbAddress, address _admin) \n        external\n        onlyOwner\n    {\n        require(address(db) == 0x0);\n        db = AssetDbInterface(_dbAddress);\n    }\n\n    /// @notice Sets active to false\n    /// @param _assetId The id belonging to an entry in the asset registry\n    /// @param _active flag if the asset is asset or not\n    function setActive(uint _assetId, bool _active)\n        external\n        isInitialized\n        onlyRole(RoleManagement.Role.AssetAdmin)\n    {\n       \n        db.setActive(_assetId, _active);\n        if (_active) {\n            emit LogAssetSetActive(_assetId);\n        } else {\n            emit LogAssetSetInactive(_assetId);\n        } \n    }\n\n    /// @notice Updates the logic contract\n    /// @param _newLogic Address of the new logic contract\n    function update(address _newLogic) \n        external\n        onlyOwner\n    {\n        Owned(db).changeOwner(_newLogic);\n    }\n\n    /// @notice Changes the address of a smart meter belonging to an asset\n    /// @param _assetId The id belonging to an entry in the asset registry\n    /// @param _newSmartMeter The address of the new smart meter\n    function updateSmartMeter(uint _assetId, address _newSmartMeter)\n        external\n        isInitialized\n        onlyRole(RoleManagement.Role.AssetAdmin)\n    {\n        db.setSmartMeter(_assetId, _newSmartMeter);\n    }\n\n    /// @notice Function to get the amount of all assets\n    /// @dev needed to iterate though all the asset\n    /// @return the amount of all assets\n    function getAssetListLength()\n        external\n        view \n        returns (uint)\n    {\n        return db.getAssetListLength();\n    }\n\n}","networks":"{}"}