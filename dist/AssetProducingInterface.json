{"abi":[{"constant":true,"inputs":[{"name":"_assetId","type":"uint256"}],"name":"getFullAsset","outputs":[{"components":[{"name":"certificatesUsedForWh","type":"uint256"},{"name":"smartMeter","type":"address"},{"name":"owner","type":"address"},{"name":"lastSmartMeterReadWh","type":"uint256"},{"name":"active","type":"bool"},{"name":"lastSmartMeterReadFileHash","type":"string"},{"name":"matcher","type":"address[]"},{"name":"certificatesCreatedForWh","type":"uint256"},{"name":"lastSmartMeterCO2OffsetRead","type":"uint256"},{"name":"maxOwnerChanges","type":"uint256"},{"name":"propertiesDocumentHash","type":"string"},{"name":"url","type":"string"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_assetId","type":"uint256"},{"name":"_newMeterRead","type":"uint256"},{"name":"_smartMeterDown","type":"bool"},{"name":"_lastSmartMeterReadFileHash","type":"string"},{"name":"_CO2OffsetMeterRead","type":"uint256"},{"name":"_CO2OffsetServiceDown","type":"bool"}],"name":"saveSmartMeterRead","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_smartMeter","type":"address"},{"name":"_owner","type":"address"},{"name":"_maxOwnerChanges","type":"uint256"},{"name":"_matcher","type":"address"},{"name":"_active","type":"bool"},{"name":"_propertiesDocumentHash","type":"string"},{"name":"_url","type":"string"}],"name":"createAsset","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_assetId","type":"uint256"}],"name":"getAssetProducingProperties","outputs":[{"name":"_certificatesCreatedForWh","type":"uint256"},{"name":"_lastSmartMeterCO2OffsetRead","type":"uint256"},{"name":"_maxOwnerChanges","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_assetId","type":"uint256"}],"name":"getAssetGeneral","outputs":[{"name":"_smartMeter","type":"address"},{"name":"_owner","type":"address"},{"name":"_lastSmartMeterReadWh","type":"uint256"},{"name":"_active","type":"bool"},{"name":"_lastSmartMeterReadFileHash","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_assetId","type":"uint256"},{"name":"_newMeterRead","type":"uint256"},{"name":"_smartMeterDown","type":"bool"},{"name":"_lastSmartMeterReadFileHash","type":"string"},{"name":"_CO2OffsetMeterRead","type":"uint256"},{"name":"_CO2OffsetServiceDown","type":"bool"}],"name":"saveSmartMeterReadBundle","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_assetId","type":"uint256"}],"name":"getAsset","outputs":[{"name":"_certificatesUsedForWh","type":"uint256"},{"name":"_smartMeter","type":"address"},{"name":"_owner","type":"address"},{"name":"_lastSmartMeterReadWh","type":"uint256"},{"name":"_active","type":"bool"},{"name":"_lastSmartMeterReadFileHash","type":"string"},{"name":"_matcher","type":"address[]"},{"name":"_certificatesCreatedForWh","type":"uint256"},{"name":"_lastSmartMeterCO2OffsetRead","type":"uint256"},{"name":"_maxOwnerChanges","type":"uint256"},{"name":"_propertiesDocumentHash","type":"string"},{"name":"_url","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_assetId","type":"uint256"}],"name":"getLastSmartMeterReadFileHash","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"","contractName":"AssetProducingInterface","deployedBytecode":"","source":"// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector, \n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH, Martin Kuechler, martin.kuchler@slock.it\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../contracts/Asset/AssetProducingRegistryDB.sol\";\n\n/// @title this interface defines the functions of the AssetContractLookup-Contract \ninterface AssetProducingInterface {\n    function createAsset(address _smartMeter, address _owner, uint _maxOwnerChanges, address _matcher, bool _active, string _propertiesDocumentHash, string _url) external;\n    function saveSmartMeterRead(uint _assetId, uint _newMeterRead, bool _smartMeterDown, string _lastSmartMeterReadFileHash, uint _CO2OffsetMeterRead,  bool _CO2OffsetServiceDown) external;\n    function saveSmartMeterReadBundle(uint _assetId, uint _newMeterRead, bool _smartMeterDown, string _lastSmartMeterReadFileHash, uint _CO2OffsetMeterRead, bool _CO2OffsetServiceDown) external;\n    function getAsset(uint _assetId) external view returns (uint _certificatesUsedForWh, address _smartMeter, address _owner, uint _lastSmartMeterReadWh, bool _active, string _lastSmartMeterReadFileHash, address[] _matcher, uint _certificatesCreatedForWh, uint _lastSmartMeterCO2OffsetRead, uint _maxOwnerChanges, string _propertiesDocumentHash, string _url);\n    function getAssetGeneral(uint _assetId)  external view returns(address _smartMeter, address _owner, uint _lastSmartMeterReadWh, bool _active, string _lastSmartMeterReadFileHash);\n    function getAssetProducingProperties(uint _assetId) external view returns(uint _certificatesCreatedForWh, uint _lastSmartMeterCO2OffsetRead, uint _maxOwnerChanges);\n    function getFullAsset(uint _assetId) external view returns (AssetProducingRegistryDB.Asset);\n    function getLastSmartMeterReadFileHash(uint _assetId) external view returns (string); \n}","networks":"{}"}